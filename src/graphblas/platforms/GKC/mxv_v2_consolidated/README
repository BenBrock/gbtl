Second mxv implementation, consolidating mask and nomask versions
The approach here is to make the management of implementations simpler 
by combining similar code paths and differentiating them by compile-time
information (NoMask vs a Mask, NoAccumulate vs and Accumulator)




╭─markb1@spiralcyh-10-90-80-51 ~/gbtl/build ‹GKC*› 
╰─$ ./bin/gkc_mxv_timing_demo_GKC ../src/demo/triangle_count_data_ca-HepTh.tsv
Read 51946 rows.
#Nodes = 9877
Running algorithm(s)... M.nvals = 1457
u.nvals = 942
OPTIMIZED IMPLEMENTATION: A*u
w := A+.*u                : 231084 usec, w.nvals = 3289 reduce = 5104
w := w + A+.*u            : 180076 usec, w.nvals = 3289 reduce = 10208
w<m,merge> := A+.*u       : 85838 usec, w.nvals = 3289 reduce = 9460
w<m,replace> := A+.*u     : 73164 usec, w.nvals = 485 reduce = 748
w<m,merge> := w + A+.*u   : 72037 usec, w.nvals = 485 reduce = 1496
w<m,replace> := w + A+.*u : 86616 usec, w.nvals = 485 reduce = 2244
OPTIMIZED IMPLEMENTATION: A'*u
w := A'+.*u                : 45084 usec, w1.nvals = 3289 reduce = 5104
w := w + A'+.*u            : 44891 usec, w1.nvals = 3289 reduce = 10208
w<m,merge> := A'+.*u       : 3985 usec, w1.nvals = 3289 reduce = 9460
w<m,replace> := A'+.*u      : 1159 usec, w1.nvals = 485 reduce = 748
w<m,merge> := w + A'+.*u   : 1575 usec, w1.nvals = 485 reduce = 1496
w<m,replace> := w + A'+.*u : 16698 usec, w1.nvals = 485 reduce = 2244
Warning! sorting vector for eq check!
Results PASSED