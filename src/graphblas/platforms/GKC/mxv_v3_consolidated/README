Augmenttation of V2, where mask accumulate replace case uses
a specialized interset-delete with the w vector and the mask.
The removal is done before the dot products and can be 
done without the sparse primitive.
Also, dot product loop is split into two while loops to avoid 
inner branch.




╭─markb1@spiralcyh-10-90-80-51 ~/gbtl/build ‹GKC*› 
╰─$ ./bin/gkc_mxv_timing_demo_GKC ../src/demo/triangle_count_data_ca-HepTh.tsv
Read 51946 rows.
#Nodes = 9877
Running algorithm(s)... M.nvals = 1457
u.nvals = 942
OPTIMIZED IMPLEMENTATION: A*u
w := A+.*u                : 231627 usec, w.nvals = 3289 reduce = 5104
w := w + A+.*u            : 180347 usec, w.nvals = 3289 reduce = 10208
w<m,merge> := A+.*u       : 88166 usec, w.nvals = 3289 reduce = 9460
w<m,replace> := A+.*u     : 75229 usec, w.nvals = 485 reduce = 748
w<m,merge> := w + A+.*u   : 72691 usec, w.nvals = 485 reduce = 1496
w<m,replace> := w + A+.*u : 72784 usec, w.nvals = 485 reduce = 2244
OPTIMIZED IMPLEMENTATION: A'*u
w := A'+.*u                : 45181 usec, w1.nvals = 3289 reduce = 5104
w := w + A'+.*u            : 44956 usec, w1.nvals = 3289 reduce = 10208
w<m,merge> := A'+.*u       : 3975 usec, w1.nvals = 3289 reduce = 9460
w<m,replace> := A'+.*u      : 1149 usec, w1.nvals = 485 reduce = 748
w<m,merge> := w + A'+.*u   : 1577 usec, w1.nvals = 485 reduce = 1496
w<m,replace> := w + A'+.*u : 16629 usec, w1.nvals = 485 reduce = 2244
Warning! sorting vector for eq check!
Results PASSED